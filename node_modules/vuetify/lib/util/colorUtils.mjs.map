{"version":3,"file":"colorUtils.mjs","names":["consoleWarn","chunk","padEnd","sRGB","CIELAB","isCssColor","color","test","colorToInt","rgb","c","startsWith","substring","length","split","map","char","join","parseInt","TypeError","constructor","name","isNaN","classToHex","colors","currentTheme","colorName","colorModifier","toString","trim","replace","hexColor","base","intToHex","repeat","colorToHex","HSVAtoRGBA","hsva","h","s","v","a","f","n","k","Math","max","min","round","r","g","b","RGBAtoHSVA","rgba","hsv","HSVAtoHSLA","l","sprime","HSLAtoHSVA","hsl","RGBAtoCSS","HSVAtoCSS","RGBtoCSS","RGBAtoHex","toHex","substr","toUpperCase","HexToRGBA","hex","slice","HexToHSVA","HSVAtoHex","parseHex","x","parseGradient","gradient","Object","values","RGBtoInt","colorToRGB","int","lighten","value","amount","lab","fromXYZ","toXYZ","darken","getLuma","getContrast","first","second","l1","l2","light","dark"],"sources":["../../src/util/colorUtils.ts"],"sourcesContent":["// Utilities\nimport { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport * as sRGB from '@/util/color/transformSRGB'\nimport * as CIELAB from '@/util/color/transformCIELAB'\n\n// Types\nimport type { Colors } from '@/composables/theme'\n\nexport type ColorInt = number\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number }\nexport type HSVA = HSV & { a: number }\nexport type RGB = { r: number, g: number, b: number }\nexport type RGBA = RGB & { a: number }\nexport type HSL = { h: number, s: number, l: number }\nexport type HSLA = HSL & { a: number }\nexport type Hex = string\nexport type Hexa = string\nexport type Color = string | number | {}\n\nexport function isCssColor (color?: string | null | false): boolean {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color)\n}\n\nexport function colorToInt (color: Color): ColorInt {\n  let rgb\n\n  if (typeof color === 'number') {\n    rgb = color\n  } else if (typeof color === 'string') {\n    let c = color.startsWith('#') ? color.substring(1) : color\n    if (c.length === 3) {\n      c = c.split('').map(char => char + char).join('')\n    }\n    if (c.length !== 6 && c.length !== 8) {\n      consoleWarn(`'${color}' is not a valid rgb color`)\n    }\n    rgb = parseInt(c, 16)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n\n  if (rgb < 0) {\n    consoleWarn(`Colors cannot be negative: '${color}'`)\n    rgb = 0\n  } else if (rgb > 0xffffffff || isNaN(rgb)) {\n    consoleWarn(`'${color}' is not a valid rgb color`)\n    rgb = 0xffffff\n  }\n\n  return rgb\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\nexport function intToHex (color: ColorInt): string {\n  let hexColor: string = color.toString(16)\n\n  if (hexColor.length < 6) hexColor = '0'.repeat(6 - hexColor.length) + hexColor\n\n  return '#' + hexColor\n}\n\nexport function colorToHex (color: Color): string {\n  return intToHex(colorToInt(color))\n}\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport function HSVAtoRGBA (hsva: HSVA): RGBA {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/**\n * Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color RGBA color as an array [0-255, 0-255, 0-255, 0-1]\n */\nexport function RGBAtoHSVA (rgba: RGBA): HSVA {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVAtoHSLA (hsva: HSVA): HSLA {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLAtoHSVA (hsl: HSLA): HSVA {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBAtoCSS (rgba: RGBA): string {\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`\n}\n\nexport function HSVAtoCSS (hsva: HSVA): string {\n  return RGBAtoCSS(HSVAtoRGBA(hsva))\n}\n\nexport function RGBtoCSS (rgba: RGBA): string {\n  return RGBAtoCSS({ ...rgba, a: 1 })\n}\n\nexport function RGBAtoHex (rgba: RGBA): Hex {\n  const toHex = (v: number) => {\n    const h = Math.round(v).toString(16)\n    return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n  }\n\n  return `#${[\n    toHex(rgba.r),\n    toHex(rgba.g),\n    toHex(rgba.b),\n    toHex(Math.round(rgba.a * 255)),\n  ].join('')}`\n}\n\nexport function HexToRGBA (hex: Hex): RGBA {\n  const rgba = chunk(hex.slice(1), 2).map((c: string) => parseInt(c, 16))\n\n  return {\n    r: rgba[0],\n    g: rgba[1],\n    b: rgba[2],\n    a: Math.round((rgba[3] / 255) * 100) / 100,\n  }\n}\n\nexport function HexToHSVA (hex: Hex): HSVA {\n  const rgb = HexToRGBA(hex)\n  return RGBAtoHSVA(rgb)\n}\n\nexport function HSVAtoHex (hsva: HSVA): Hex {\n  return RGBAtoHex(HSVAtoRGBA(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length === 6) {\n    hex = padEnd(hex, 8, 'F')\n  } else {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return `#${hex}`.toUpperCase().substr(0, 9)\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGBA(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function RGBtoInt (rgba: RGBA): ColorInt {\n  return (rgba.r << 16) + (rgba.g << 8) + rgba.b\n}\n\nexport function colorToRGB (color: string) {\n  const int = colorToInt(color)\n\n  return {\n    r: (int & 0xFF0000) >> 16,\n    g: (int & 0xFF00) >> 8,\n    b: (int & 0xFF),\n  }\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  // TODO: why this false positive?\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  lab[0] = lab[0] + amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma (color: Color) {\n  const rgb = colorToInt(color)\n\n  return sRGB.toXYZ(rgb)[1]\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast (first: Color, second: Color) {\n  const l1 = getLuma(first)\n  const l2 = getLuma(second)\n\n  const light = Math.max(l1, l2)\n  const dark = Math.min(l1, l2)\n\n  return (light + 0.05) / (dark + 0.05)\n}\n"],"mappings":"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"}